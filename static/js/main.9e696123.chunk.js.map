{"version":3,"sources":["plugin/validation.ts","plugin/validation-schema.ts","context/index.tsx","shared/colors.ts","components/fieldset.tsx","components/flexbox.tsx","components/error-message.tsx","shared/focus-effect.ts","components/select.tsx","components/input.tsx","components/textarea.tsx","view/inquiry.tsx","components/checkbox.tsx","view/terms.tsx","components/radio-select.tsx","view/traveler.tsx","view/form.tsx","app.tsx","index.tsx"],"names":["rEng","rKor","Validation","value","flag","error","this","undefined","isEmpty","isNaN","Number","maxnum","length","isUndefined","minnum","equalnum","exec","validate","travelerValidationSchema","firstname","v","f","min","max","eng","lastname","koreanname","kor","gender","required","birthdate","equal","number","inquiryValidationSchema","arrivalhour","arrivalminute","name","phone","detail","ReservationContext","createContext","useReservationContext","state","useContext","Error","ReservationContextProvider","children","useState","map","index","id","travelers","setTravelers","inquiry","setInquiry","all","option","terms","setTerms","initialErrorState","t","Object","fromEntries","entries","omit","focusIndex","errors","setErrors","validateTravelers","Promise","resolve","key","func","validateInquiry","submit","e","a","preventDefault","old","travelerErrors","inquiryErrors","flattenErrors","values","flat","filter","alert","findIndex","Provider","colors","primary","text","white","grey","FieldsetElement","styled","fieldset","Legend","legend","Fieldset","title","Container","div","Flexbox","Message","p","props","align","ErrorMessage","useFocusEffect","shouldFocus","ref","useEffect","isNull","current","focus","width","SelectElement","select","Select","options","onChange","placeholder","useRef","target","disabled","hidden","InputElement","input","Input","label","TextareaElement","textarea","Textarea","Inquiry","setFlag","handleChange","schema","getShouldFocus","i","getError","k","range","hour","minute","Checkbox","type","checked","InputContainer","Terms","RadioSelect","htmlFor","TravelerComponent","traveler","Form","form","Button","button","FormComponent","onSubmit","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e696123.chunk.js","sourcesContent":["import isEmpty from 'lodash/isEmpty';\nimport isNaN from 'lodash/isNaN';\nimport isUndefined from 'lodash/isUndefined';\n\nconst rEng = /^[A-Za-z\\s]+$/;\nconst rKor = /[\\uac00-\\ud7af]|[\\u1100-\\u11ff]|[\\u3130-\\u318f]|[\\ua960-\\ua97f]|[\\ud7b0-\\ud7ff]/;\n\nexport default class Validation {\n  value: any;\n  error?: string;\n  flag?: boolean;\n\n  constructor(value: any, flag = false) {\n    this.value = value;\n    this.error = undefined;\n    this.flag = flag;\n  }\n\n  required(error = '내용을 입력해 주세요.') {\n    if (isEmpty(this.value) && this.flag) {\n      this.error = error;\n    }\n\n    return this;\n  }\n\n  string(error = '문자만 입력 가능합니다.') {\n    if (typeof this.value !== 'string' && this.flag) {\n      this.error = error;\n    }\n\n    return this;\n  }\n\n  number(error = '숫자만 입력 가능합니다.') {\n    if (isNaN(Number(this.value)) && this.flag) {\n      this.error = error;\n    }\n\n    return this;\n  }\n\n  max(maxnum: number, error?: string) {\n    if (this.value.length > maxnum && this.flag) {\n      this.error = isUndefined(error) \n        ? `최대 ${maxnum}자까지 입력 가능합니다.` \n        : error;\n    }\n\n    return this;\n  }\n\n  min(minnum: number, error?: string) {\n    if (this.value.length < minnum && this.flag) {\n      this.error = isUndefined(error) \n        ? `최소 ${minnum}자 이상 입력해 주세요.` \n        : error;\n    }\n\n    return this;\n  }\n\n  equal(equalnum: number, error?: string) {\n    if (this.value.length !== equalnum && this.flag) {\n      this.error = isUndefined(error) \n        ? `${equalnum}자만 입력해 주세요.` \n        : error;\n    }\n\n    return this;\n  }\n\n  eng(error = '영어와 띄워쓰기만 입력 가능합니다.') {\n    if (rEng.exec(this.value) == null && this.flag) {\n      this.error = error;\n    }\n\n    return this;\n  }\n\n  kor(error = '한글만 입력 가능합니다.') {\n    if (rKor.exec(this.value) == null && this.flag) {\n      this.error = error;\n    }\n\n    return this;\n  }\n}","import Validation from './validation';\n\nimport { TravelerValidationSchema, InquiryValidationSchema } from '../shared/types';\n\nfunction validate(value: any, flag = false) {\n  return new Validation(value, flag);\n}\n\nconst travelerValidationSchema: TravelerValidationSchema = {\n  firstname: (v, f) => validate(v, f).min(2).max(20).eng(),\n  lastname: (v, f) => validate(v, f).min(2).max(20).eng(),\n  koreanname: (v, f) => validate(v, f).min(2).max(20).kor(),\n  gender: (v, f) => validate(v, f).required('성별을 선택해 주세요.'),\n  birthdate: (v, f) => validate(v, f).equal(6, '6자리의 생년월일을 입력해 주세요.').number(),\n};\n\nconst inquiryValidationSchema: InquiryValidationSchema = {\n  arrivalhour: (v, f) => validate(v, f).required('숙소 도착 예정 시간을 선택해주세요.'),\n  arrivalminute: (v, f) => validate(v, f).required('숙소 도착 예정 시간을 선택해주세요.'),\n  name: (v, f) => validate(v, f).min(2).max(20).eng(),\n  phone: (v, f) => validate(v, f).min(2).max(20).number(), \n  detail: (v, f) => validate(v, f).required('기타 예약 정보를 입력해주세요.').max(200),\n};\n\nexport { travelerValidationSchema, inquiryValidationSchema };","import React, {\n  createContext,\n  FormEvent,\n  ReactNode,\n  ReactNodeArray,\n  useContext,\n  useState\n} from 'react';\n\nimport isUndefined from 'lodash/isUndefined';\nimport omit from 'lodash/omit';\n\nimport {\n  travelerValidationSchema,\n  inquiryValidationSchema,\n} from '../plugin/validation-schema';\n\nimport {\n  Reservation,\n  Traveler,\n  Inquiry,\n  Terms,\n  Errors,\n  TravelerErrors,\n  InquiryErrors,\n} from '../shared/types';\n\nconst ReservationContext = createContext<Reservation | null>(null);\n\nfunction ReservationContextProvider({\n  children\n}: {\n  children: ReactNode | ReactNodeArray\n}) {\n  const [travelers, setTravelers] = useState<Traveler[]>(\n    [0, 1].map(index => ({\n      id: `${index + 1}`,\n      firstname: '',\n      lastname: '',\n      koreanname: '',\n      gender: undefined,\n      birthdate: '',\n    }))\n  );\n  const [inquiry, setInquiry] = useState<Inquiry>({\n    arrivalhour: '',\n    arrivalminute: '',\n    name: '',\n    phone: '',\n    detail: '',\n  });\n  const [terms, setTerms] = useState<Terms>({\n    all: false,\n    required: false,\n    option: false,\n  });\n\n  const initialErrorState = {\n    travelers: travelers.map(t => {\n      return Object.fromEntries(\n        Object.entries(omit(t, ['id'])).map(([key]) => ([key, undefined]))\n      )\n    }) as TravelerErrors[],\n    inquiry: Object.fromEntries(\n      Object.entries(inquiry).map(([key]) => ([key, undefined]))\n    ) as InquiryErrors,\n    focusIndex: -1,\n  };\n\n  const [errors, setErrors] = useState<Errors>(initialErrorState);\n\n  const validateTravelers = Promise.resolve(\n    travelers.map(t => {\n      return Object.fromEntries(\n        Object.entries(travelerValidationSchema)\n          .map(\n            ([key, func]) =>\n              ([key, func(t[key as keyof Traveler], true).error])\n          )\n      )\n    })\n  );\n\n  const validateInquiry = Promise.resolve(\n    Object.fromEntries(\n      Object.entries(inquiryValidationSchema)\n        .map(\n          ([key, func]) =>\n            ([key, func(inquiry[key as keyof Inquiry], true).error])\n        )\n    )\n  );\n\n  const submit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    setErrors(old => ({\n      ...old,\n      focusIndex: -1,\n    }));\n\n    const [travelerErrors, inquiryErrors] = await Promise.all([\n      validateTravelers,\n      validateInquiry,\n    ]);\n\n    const flattenErrors = [\n      ...travelerErrors.map(t => Object.values(t)),\n      Object.values(inquiryErrors)\n    ].flat();\n\n    const totalErrors = flattenErrors.filter(v => !isUndefined(v));\n\n    if (totalErrors.length === 0) {\n      alert('예약이 완료 되었습니다.');\n    } else {\n      setErrors({\n        travelers: travelerErrors as TravelerErrors[],\n        inquiry: inquiryErrors as InquiryErrors,\n        focusIndex: flattenErrors.findIndex(v => !isUndefined(v)),\n      });\n    }\n  };\n\n  return (\n    <ReservationContext.Provider value={{\n      travelers,\n      setTravelers,\n      inquiry,\n      setInquiry,\n      terms,\n      setTerms,\n      errors,\n      setErrors,\n      submit\n    }}>\n      {children}\n    </ReservationContext.Provider>\n  )\n}\n\nexport function useReservationContext() {\n  const state = useContext(ReservationContext);\n\n  if (state == null) {\n    throw Error('Context should not be null.')\n  }\n\n  return state;\n}\n\nexport default ReservationContextProvider;","import { Colors } from './types';\n\nconst colors: Colors = {\n  primary: \"#51abf3\",\n  error: \"#ff922b\",\n  text: \"#212529\",\n  white: \"#ffffff\",\n  grey: \"#dddddd\",\n}\n\nexport default colors;\n","import React, { ReactNode, ReactNodeArray } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport colors from '../shared/colors';\n\nconst FieldsetElement = styled.fieldset`\n  padding: 20px;\n  border: none;\n  border-bottom: 1px solid ${colors.grey};\n\n  &:not(:last-of-type) {\n    margin-bottom: 20px;\n  }\n\n  & > *:not(:first-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nconst Legend = styled.legend`\n  font-size: 16px;\n  font-weight: bold;\n`;\n\ninterface Props {\n  title: string;\n  children: ReactNode | ReactNodeArray;\n}\n\nfunction Fieldset({ title, children }: Props) {\n  return (\n    <FieldsetElement>\n      <Legend>{title}</Legend>\n      {children}\n    </FieldsetElement>\n  )\n}\n\nexport default Fieldset;\n","import React, { ReactNode, ReactNodeArray } from 'react';\n\nimport styled from '@emotion/styled';\n\nconst Container = styled.div`\n  display: flex;\n\n  & > *:not(:last-of-type) {\n    margin-right: 12px;\n  }\n`;\n\ninterface Props {\n  children: ReactNode | ReactNodeArray;\n}\n\nfunction Flexbox({ children }: Props) {\n  return (\n    <Container>\n      {children}\n    </Container>\n  )\n}\n\nexport default Flexbox;\n","import React from 'react';\n\nimport styled from '@emotion/styled';\n\nimport colors from '../shared/colors';\n\ntype Align = 'left' | 'right';\n\nconst Message = styled.p<{ align: Align }>`\n  color: ${colors.error};\n  font-size: 12px;\n  text-align: ${props => props.align};\n  margin-top: 8px;\n`;\n\nfunction ErrorMessage({\n  align = 'left',\n  children\n}: {\n  align?: Align,\n  children: string\n}) {\n  return (\n    <Message align={align}>{children}</Message>\n  );\n}\n\nexport default ErrorMessage;\n","import { RefObject, useEffect } from 'react';\n\nimport isNull from 'lodash/isNull';\n\nfunction useFocusEffect(\n  shouldFocus: boolean, \n  ref: RefObject<HTMLElement>\n) {\n  useEffect(() => {\n    if (shouldFocus && !isNull(ref.current)) {\n      ref.current.focus();\n    }\n  }, [shouldFocus, ref]);\n}\n\nexport default useFocusEffect;\n","import React, { ChangeEvent, useRef } from 'react';\n\nimport styled from '@emotion/styled';\nimport isUndefined from 'lodash/isUndefined';\n\nimport ErrorMessage from './error-message';\n\nimport colors from '../shared/colors';\nimport useFocusEffect from '../shared/focus-effect';\n\nconst Container = styled.div<{ width?: number }>`\n  width: ${props =>\n    isUndefined(props.width) ? '100%' : `${props.width}px`};\n`;\n\nconst SelectElement = styled.select<{\n  error?: string;\n}>`\n  width: 100%;\n  font-size: 14px;\n  padding: 8px;\n  border-radius: 4px;\n  border: 1px solid ${props =>\n    isUndefined(props.error) ? colors.grey : colors.error};\n`;\n\ninterface Props {\n  options: string[];\n  value: string;\n  onChange(value: string): void;\n  shouldFocus: boolean;\n  error?: string;\n  width?: number;\n  placeholder?: string;\n}\n\nfunction Select({\n  options,\n  value,\n  onChange,\n  shouldFocus,\n  error,\n  width,\n  placeholder\n}: Props) {\n  const ref = useRef<HTMLSelectElement>(null);\n\n  const handleChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    onChange(e.target.value);\n  }\n\n  useFocusEffect(shouldFocus, ref);\n\n  return (\n    <Container width={width}>\n      <SelectElement\n        ref={ref}\n        error={error}\n        value={value}\n        onChange={handleChange}\n      >\n        {!isUndefined(placeholder) && (\n          <option\n            value=\"\"\n            disabled\n            hidden\n          >\n            {placeholder}\n          </option>\n        )}\n        {options.map(option => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </SelectElement>\n      {!isUndefined(error) && (\n        <ErrorMessage>{error}</ErrorMessage>\n      )}\n    </Container>\n  )\n}\n\nexport default Select;\n","import React, { ChangeEvent, useRef } from 'react';\n\nimport styled from '@emotion/styled';\nimport isUndefined from 'lodash/isUndefined';\n\nimport ErrorMessage from './error-message';\nimport Flexbox from './flexbox';\nimport Select from './select';\n\nimport colors from '../shared/colors';\nimport useFocusEffect from '../shared/focus-effect';\n\nconst InputElement = styled.input<{ error?: string }>`\n  width: 100%;\n  padding: 8px;\n  border-radius: 4px;\n  border: 1px solid ${props =>\n    isUndefined(props.error) ? colors.grey : colors.error};\n\n  &:not(:only-child) {\n    margin-left: 12px;\n  }\n`;\n\ninterface Props {\n  label: string;\n  value: string;\n  onChange(value: string): void;\n  shouldFocus: boolean;\n  error?: string;\n  placeholder?: string;\n  options?: string[];\n}\n\nfunction Input({\n  label,\n  value,\n  onChange,\n  shouldFocus,\n  error,\n  placeholder = '홍길동',\n  options\n}: Props) {\n  const ref = useRef<HTMLInputElement>(null);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange(e.target.value);\n  }\n\n  useFocusEffect(shouldFocus, ref);\n\n  return (\n    <div>\n      <label>\n        {label}\n        <Flexbox>\n          {!isUndefined(options) && (\n            <Select\n              options={options}\n              width={100}\n              shouldFocus={false}\n              /* +82(대한민국)으로 값 고정 */\n              value={options[0]}\n              onChange={(value: string) => { alert(value) }}\n            />\n          )}\n          <InputElement\n            ref={ref}\n            placeholder={placeholder}\n            value={value}\n            onChange={handleChange}\n            error={error}\n          />\n        </Flexbox>\n      </label>\n      {!isUndefined(error) && (\n        <ErrorMessage\n          align={isUndefined(options) ? 'left' : 'right'}\n        >\n          {error}\n        </ErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default Input;\n","import React, { ChangeEvent, useRef } from 'react';\n\nimport styled from '@emotion/styled';\nimport isUndefined from 'lodash/isUndefined';\n\nimport ErrorMessage from './error-message';\n\nimport colors from '../shared/colors';\nimport useFocusEffect from '../shared/focus-effect';\n\nconst TextareaElement = styled.textarea<{\n  error?: string\n}>`\n  width: 100%;\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid ${props =>\n    isUndefined(props.error) ? colors.grey : colors.error};\n`;\n\ninterface Props {\n  label: string;\n  value: string;\n  onChange(value: string): void;\n  shouldFocus: boolean;\n  error?: string;\n  placeholder?: string;\n}\n\nfunction Textarea({\n  label,\n  value,\n  onChange,\n  shouldFocus,\n  error,\n  placeholder = '답변을 입력하세요.'\n}: Props) {\n  const ref = useRef<HTMLTextAreaElement>(null);\n\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    onChange(e.target.value);\n  }\n\n  useFocusEffect(shouldFocus, ref);\n\n  return (\n    <div>\n      <label>\n        {label}\n        <TextareaElement\n          ref={ref}\n          value={value}\n          onChange={handleChange}\n          error={error}\n          placeholder={placeholder}\n        />\n      </label>\n      {!isUndefined(error) && (\n        <ErrorMessage>{error}</ErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default Textarea;\n","import React, { useState } from 'react';\n\nimport isEmpty from 'lodash/isEmpty';\nimport range from 'lodash/range';\n\nimport Fieldset from '../components/fieldset';\nimport Flexbox from '../components/flexbox';\nimport Input from '../components/input';\nimport Select from '../components/select';\nimport Textarea from '../components/textarea';\n\nimport { useReservationContext } from '../context';\n\nimport { inquiryValidationSchema as schema } from '../plugin/validation-schema';\n\nimport { InquiryFlag } from '../shared/types';\n\nfunction Inquiry() {\n  const {\n    inquiry,\n    setInquiry,\n    errors,\n    setErrors,\n    travelers,\n  } = useReservationContext();\n\n  const [flag, setFlag] = useState<InquiryFlag>(\n    Object.fromEntries(\n      Object.entries(inquiry).map(([key]) => ([key, false]))\n    ) as InquiryFlag\n  );\n\n  const {\n    arrivalhour,\n    arrivalminute,\n    name,\n    phone,\n    detail\n  } = inquiry;\n\n  const handleChange = (key: string) => (value: string) => {\n    setErrors(old => ({\n      ...old,\n      inquiry: {\n        ...old.inquiry,\n        [key]:\n          schema[key as keyof InquiryFlag](\n            value, !isEmpty(value)\n          ).error,\n      }\n    }));\n\n    setFlag(old => ({\n      ...old,\n      [key]: !isEmpty(value),\n    }))\n\n    setInquiry(old => ({\n      ...old,\n      [key]: value,\n    }));\n  }\n\n  const getShouldFocus = (i: number) => {\n    return errors.focusIndex === (travelers.length * 5) + i;\n  }\n\n  const getError = (k: string, v: any) => {\n    const key = k as keyof InquiryFlag;\n\n    return errors.inquiry[key]\n      || schema[key](v, flag[key]).error;\n  }\n\n  return (\n    <>\n      <Fieldset title=\"숙소 도착 예정 시간\">\n        <Flexbox>\n          <Select\n            options={range(0, 24).map(hour => `${hour}시`)}\n            placeholder=\"시\"\n            value={arrivalhour}\n            onChange={handleChange('arrivalhour')}\n            shouldFocus={getShouldFocus(0)}\n            error={getError('arrivalhour', arrivalhour)}\n          />\n          <Select\n            options={range(0, 60).map(minute => `${minute}분`)}\n            placeholder=\"분\"\n            value={arrivalminute}\n            onChange={handleChange('arrivalminute')}\n            shouldFocus={getShouldFocus(1)}\n            error={getError('arrivalminute', arrivalminute)}\n          />\n        </Flexbox>\n      </Fieldset>\n      <Fieldset title=\"상세 핸드폰 정보\">\n        <Input\n          label=\"사용자 이름\"\n          placeholder=\"Hong Gil Dong\"\n          value={name}\n          onChange={handleChange('name')}\n          shouldFocus={getShouldFocus(2)}\n          error={getError('name', name)}\n        />\n        <Input\n          placeholder=\"'-' 없이 적어주세요.\"\n          label=\"핸드폰 번호\"\n          value={phone}\n          onChange={handleChange('phone')}\n          options={['+82(대한민국)']}\n          shouldFocus={getShouldFocus(3)}\n          error={getError('phone', phone)}\n        />\n      </Fieldset>\n      <Fieldset title=\"기타 예약 정보\">\n        <Textarea\n          label=\"오시는 교통 수단을 적어주세요.\"\n          value={detail}\n          onChange={handleChange('detail')}\n          shouldFocus={getShouldFocus(4)}\n          error={getError('detail', detail)}\n        />\n      </Fieldset>\n    </>\n  )\n}\n\nexport default Inquiry;\n","import React from 'react';\n\nimport styled from '@emotion/styled';\n\nconst Input = styled.input`\n  margin-right: 8px;\n`;\n\ninterface Props {\n  label: string;\n  value: boolean;\n  onChange(value: boolean): void;\n}\n\nfunction Checkbox({ label, value, onChange }: Props) {\n  return (\n    <div>\n      <label>\n        <Input\n          type=\"checkbox\"\n          checked={value}\n          onChange={() => onChange(!value)}\n        />\n        {label}\n      </label>\n    </div>\n  )\n}\n\nexport default Checkbox;\n","import React, { useEffect } from 'react';\n\nimport styled from '@emotion/styled';\n\nimport Checkbox from '../components/checkbox';\n\nimport { useReservationContext } from '../context';\n\nimport colors from '../shared/colors';\n\nconst Container = styled.div`\n  padding: 20px;\n\n  & > *:first-child {\n    margin-bottom: 20px;\n  }\n`;\n\nconst InputContainer = styled.div`\n  padding: 12px;\n  border: 1px solid ${colors.grey};\n  margin: 12px 0;\n\n  & > *:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nfunction Terms() {\n  const { terms, setTerms } = useReservationContext();\n  const { all, required, option } = terms;\n\n  const handleChange = (key: string) => (value: boolean) => {\n    setTerms(old => ({\n      ...old,\n      [key]: value,\n    }));\n  }\n\n  useEffect(() => {\n    setTerms(old => ({\n      ...old,\n      required: all,\n      option: all,\n    }));\n  }, [all, setTerms]);\n\n  return (\n    <Container>\n      <h4>약관 동의</h4>\n      <Checkbox\n        label=\"전체 약관 동의\"\n        value={all}\n        onChange={handleChange('all')}\n      />\n      <InputContainer>\n        <Checkbox\n          label=\"여행자 약관 동의(필수)\"\n          value={required}\n          onChange={handleChange('required')}\n        />\n        <Checkbox\n          label=\"특가 항공권 및 할인 혜택 안내 동의(선택)\"\n          value={option}\n          onChange={handleChange('option')}\n        />\n      </InputContainer>\n    </Container>\n  )\n}\n\nexport default Terms;\n","import React, { useRef } from 'react';\n\nimport styled from '@emotion/styled';\nimport isUndefined from 'lodash/isUndefined';\n\nimport ErrorMessage from './error-message';\n\nimport colors from '../shared/colors';\nimport useFocusEffect from '../shared/focus-effect';\n\nconst Container = styled.div`\n  display: flex;\n\n  & > *:not(:first-child) {\n    margin-left: -1px;\n  }\n`;\n\nconst InputContainer = styled.div<{ error?: string }>`\n  position: relative;\n  flex: 1;\n\n  &:first-of-type {\n    & > label {\n      border-top-left-radius: 4px;\n      border-bottom-left-radius: 4px;\n    }\n  }\n\n  &:last-of-type {\n    & > label {\n      border-top-right-radius: 4px;\n      border-bottom-right-radius: 4px;\n    }\n  }\n\n  input {\n    &:checked,\n    &:not(:checked) {\n      position: absolute;\n      left: -9999px;\n    }\n  \n    &:checked + label,\n    &:not(:checked) + label {\n      cursor: pointer;\n      position: relative;\n      display: block;\n      width: 100%;\n      text-align: center;\n      background-color: ${colors.white};\n      padding: 8px;\n      border: 1px solid ${props =>\n    isUndefined(props.error) ? colors.grey : colors.error};\n      transition: all ease-in-out 0.2s;\n    }\n\n    &:checked + label {\n      background-color: ${colors.grey};\n    }\n\n    &:not(:checked) + label {\n      background-color: ${colors.white};\n    }\n  }\n`;\n\ninterface Props {\n  options: string[];\n  name: string;\n  value?: string;\n  onChange(value: string): void;\n  shouldFocus: boolean;\n  error?: string;\n}\n\nfunction RadioSelect({\n  options,\n  name,\n  value,\n  onChange,\n  shouldFocus,\n  error,\n}: Props) {\n  const ref = useRef<HTMLInputElement>(null);\n\n  useFocusEffect(shouldFocus, ref);\n\n  return (\n    <div>\n      <Container>\n        {options.map(option => (\n          <InputContainer key={option} error={error}>\n            <input\n              ref={ref}\n              type=\"radio\"\n              id={`${name}-${option}`}\n              name={name}\n              value={value}\n              onChange={() => onChange(option)}\n            />\n            <label htmlFor={`${name}-${option}`}>\n              {option}\n            </label>\n          </InputContainer>\n        ))}\n      </Container>\n      {!isUndefined(error) && (\n        <ErrorMessage>{error}</ErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default RadioSelect;\n","import React, { useState } from 'react';\n\nimport isEmpty from 'lodash/isEmpty';\nimport omit from 'lodash/omit';\n\nimport Fieldset from '../components/fieldset';\nimport Flexbox from '../components/flexbox';\nimport Input from '../components/input';\nimport RadioSelect from '../components/radio-select';\n\nimport { useReservationContext } from '../context';\n\nimport { travelerValidationSchema as schema } from '../plugin/validation-schema';\n\nimport { Traveler, TravelerFlag } from '../shared/types';\n\ninterface Props {\n  traveler: Traveler;\n  index: number;\n}\n\nfunction TravelerComponent({ traveler, index }: Props) {\n  const {\n    id,\n    firstname,\n    lastname,\n    koreanname,\n    gender,\n    birthdate\n  } = traveler;\n\n  const {\n    setTravelers,\n    errors,\n    setErrors,\n  } = useReservationContext();\n\n  const [flag, setFlag] = useState<TravelerFlag>(\n    Object.fromEntries(\n      Object.entries(\n        omit(traveler, ['id']))\n        .map(([key]) => ([key, false])\n        )\n    ) as TravelerFlag\n  );\n\n  const handleChange = (\n    key: string, id: string\n  ) => (\n    value: string\n  ) => {\n      setErrors(old => ({\n        ...old,\n        travelers: old.travelers.map((t, i) => {\n          return index === i\n            ? {\n              ...t,\n              [key]:\n                schema[key as keyof TravelerFlag](\n                  value, !isEmpty(value)\n                ).error\n            }\n            : t\n        })\n      }));\n\n      setFlag(old => ({\n        ...old,\n        [key]: !isEmpty(value),\n      }));\n\n      setTravelers(old => old.map((traveler) => {\n        return id === traveler.id ? ({\n          ...traveler,\n          [key]: value,\n        }) : traveler\n      }));\n    }\n\n  const getShouldFocus = (i: number) => {\n    return errors.focusIndex === (index * 5) + i;\n  }\n\n  const getError = (k: string, v: any) => {\n    const key = k as keyof TravelerFlag;\n\n    return errors.travelers[index][key]\n      || schema[key](v, flag[key]).error;\n  }\n\n  return (\n    <Fieldset key={id} title={`여행자 ${id}`}>\n      <Flexbox>\n        <Input\n          label=\"영문 이름\u001d\"\n          value={firstname}\n          onChange={handleChange('firstname', id)}\n          placeholder=\"Gil Dong\"\n          shouldFocus={getShouldFocus(0)}\n          error={getError('firstname', firstname)}\n        />\n        <Input\n          label=\"영문 성\"\n          value={lastname}\n          onChange={handleChange('lastname', id)}\n          placeholder=\"Hong\"\n          shouldFocus={getShouldFocus(1)}\n          error={getError('lastname', lastname)}\n        />\n      </Flexbox>\n      <Input\n        label=\"한글 이름\"\n        value={koreanname}\n        onChange={handleChange('koreanname', id)}\n        shouldFocus={getShouldFocus(2)}\n        error={getError('koreanname', koreanname)}\n      />\n      <RadioSelect\n        options={['남', '여']}\n        name={`${id}-gender`}\n        value={gender}\n        onChange={handleChange('gender', id)}\n        shouldFocus={getShouldFocus(3)}\n        error={getError('gender', gender)}\n      />\n      <Input\n        label=\"생년월일\"\n        value={birthdate}\n        onChange={handleChange('birthdate', id)}\n        placeholder=\"6자리 숫자로 입력하세요(YYMMDD)\"\n        shouldFocus={getShouldFocus(4)}\n        error={getError('birthdate', birthdate)}\n      />\n    </Fieldset>\n  )\n}\n\nexport default TravelerComponent;\n","import React from 'react';\n\nimport styled from '@emotion/styled';\n\nimport Inquiry from './inquiry';\nimport Terms from './terms';\nimport Traveler from './traveler';\n\nimport { useReservationContext } from '../context';\n\nimport colors from '../shared/colors';\n\nconst Form = styled.form`\n  max-width: 375px;\n  color: ${colors.text};\n  padding: 20px;\n  margin: 100px auto;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  color: ${colors.white};\n  background-color: ${colors.primary};\n  padding: 12px;\n  opacity: 1;\n  transition: all ease-in-out 0.2s;\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n`;\n\nfunction FormComponent() {\n  const { submit, travelers, terms } = useReservationContext();\n\n  return (\n    <Form onSubmit={submit}>\n      {travelers.map((traveler, index) => (\n        <Traveler\n          key={traveler.id}\n          traveler={traveler}\n          index={index}\n        />\n      ))}\n      <Inquiry />\n      <Terms />\n      <Button disabled={!terms.required}>\n        결제하기\n      </Button>\n    </Form>\n  )\n}\n\nexport default FormComponent;\n","import React from 'react';\nimport { RecoilRoot } from 'recoil';\n\nimport ReservationContextProvider from './context';\nimport Form from './view/form';\n\nimport './normalize.css'\n\nfunction App() {\n  return (\n    <RecoilRoot>\n      <ReservationContextProvider>\n        <Form />\n      </ReservationContextProvider>\n    </RecoilRoot>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}